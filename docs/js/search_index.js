var search_data = {"index":{"searchIndex":["app","bar","dsl","string","widgets","button","custom","load","power","uptime","widget","background()","camelize()","color()","css()","from_options()","new()","new()","new()","new()","new()","new()","new()","new()","new()","spacing()","update()","update()","update()","update()","update()","update_safe()","widget()","readme"],"longSearchIndex":["app","bar","dsl","string","widgets","widgets::button","widgets::custom","widgets::load","widgets::power","widgets::uptime","widgets::widget","dsl#background()","string#camelize()","dsl#color()","dsl#css()","widgets::widget::from_options()","app::new()","bar::new()","dsl::new()","widgets::button::new()","widgets::custom::new()","widgets::load::new()","widgets::power::new()","widgets::uptime::new()","widgets::widget::new()","dsl#spacing()","widgets::button#update()","widgets::custom#update()","widgets::load#update()","widgets::uptime#update()","widgets::widget#update()","widgets::widget#update_safe()","dsl#widget()",""],"info":[["App","","App.html","","<p>The GTK Application\n"],["Bar","","Bar.html","","<p>The Application Window\n"],["DSL","","DSL.html","","<p>The configuration DSL.\n<p>Example configuration file:\n\n<pre>widget :power\nwidget :uptime, on_click: -&gt; { spawn &quot;alacritty ...</pre>\n"],["String","","String.html","",""],["Widgets","","Widgets.html","","<p>Base Widget class. Defines some common behavior across top level widgets in the bar.\n"],["Widgets::Button","","Widgets/Button.html","","<p>A generic button widget. It currently is exactly like the custom widget but styled as a button.\n"],["Widgets::Custom","","Widgets/Custom.html","","<p>A custom widget that executs a proc\n"],["Widgets::Load","","Widgets/Load.html","","<p>The Load widget reads /proc/loadavg.\n<p>Such values read like +1.28 1.18 0.92 1/2076 771310+.\n<p>Where the first …\n"],["Widgets::Power","","Widgets/Power.html","","<p>A simple power button\n"],["Widgets::Uptime","","Widgets/Uptime.html","","<p>A widget that executes ‘uptime`\n"],["Widgets::Widget","","Widgets/Widget.html","",""],["background","DSL","DSL.html#method-i-background","(value)","<p>The window background color.\n<p>Defaults to <code>&quot;rgba(0, 0, 0, 0.5)&quot;</code>.\n"],["camelize","String","String.html#method-i-camelize","()",""],["color","DSL","DSL.html#method-i-color","(value)","<p>The default text color.\n<p>Defaults to <code>&quot;white&quot;</code>.\n"],["css","DSL","DSL.html#method-i-css","(css)","<p>Add custom CSS.\n<p>This can be combined with the ability to configure a Widgets::Widget with a custom name …\n"],["from_options","Widgets::Widget","Widgets/Widget.html#method-c-from_options","(widget)","<p>Create a Widgets::Widget from a hash with options\n"],["new","App","App.html#method-c-new","(options)",""],["new","Bar","Bar.html#method-c-new","(app)",""],["new","DSL","DSL.html#method-c-new","(path)",""],["new","Widgets::Button","Widgets/Button.html#method-c-new","(options)",""],["new","Widgets::Custom","Widgets/Custom.html#method-c-new","(options)",""],["new","Widgets::Load","Widgets/Load.html#method-c-new","(options)",""],["new","Widgets::Power","Widgets/Power.html#method-c-new","(options)",""],["new","Widgets::Uptime","Widgets/Uptime.html#method-c-new","(options)",""],["new","Widgets::Widget","Widgets/Widget.html#method-c-new","(options={})",""],["spacing","DSL","DSL.html#method-i-spacing","(spacing)","<p>Set the spacing for the top-level box widget.\n<p>All widgets will be spaced this amount apart.\n<p>Default is …\n"],["update","Widgets::Button","Widgets/Button.html#method-i-update","()",""],["update","Widgets::Custom","Widgets/Custom.html#method-i-update","()",""],["update","Widgets::Load","Widgets/Load.html#method-i-update","()",""],["update","Widgets::Uptime","Widgets/Uptime.html#method-i-update","()",""],["update","Widgets::Widget","Widgets/Widget.html#method-i-update","()","<p>Update method for this widget\n"],["update_safe","Widgets::Widget","Widgets/Widget.html#method-i-update_safe","()","<p>Like update but with error handling\n"],["widget","DSL","DSL.html#method-i-widget","(type, options={})","<p>Configure a Widgets::Widget for your bar\n"],["README","","README_md.html","","<p>RubyBar\n<p>A bar for wayland implemented with Ruby and GTK.\nConfiguration is done via a Ruby DSL.\n<p>RubyBar …\n"]]}}