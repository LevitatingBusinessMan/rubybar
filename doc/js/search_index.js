var search_data = {"index":{"searchIndex":["app","bar","dsl","string","widgets","button","custom","uptime","widget","background()","camelize()","color()","css()","new()","new()","new()","new()","new()","new()","new()","update()","update()","update()","update()","widget()","gemfile","gemfile.lock","readme","rakefile","style.css"],"longSearchIndex":["app","bar","dsl","string","widgets","widgets::button","widgets::custom","widgets::uptime","widgets::widget","dsl#background()","string#camelize()","dsl#color()","dsl#css()","app::new()","bar::new()","dsl::new()","widgets::button::new()","widgets::custom::new()","widgets::uptime::new()","widgets::widget::new()","widgets::button#update()","widgets::custom#update()","widgets::uptime#update()","widgets::widget#update()","dsl#widget()","","","","",""],"info":[["App","","App.html","","<p>The GTK Application\n"],["Bar","","Bar.html","","<p>The Application Window\n"],["DSL","","DSL.html","","<p>The configuration DSL.\n<p>Example configuration file:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">color</span> <span class=\"ruby-string\">&quot;red&quot;</span>\n<span class=\"ruby-identifier\">widget</span> <span class=\"ruby-value\">:uptime</span>\n</pre>\n"],["String","","String.html","",""],["Widgets","","Widgets.html","",""],["Widgets::Button","","Widgets/Button.html","","<p>A custom widget that executs a proc\n"],["Widgets::Custom","","Widgets/Custom.html","","<p>A custom widget that executs a proc\n"],["Widgets::Uptime","","Widgets/Uptime.html","","<p>A widget that executes ‘uptime`\n"],["Widgets::Widget","","Widgets/Widget.html","",""],["background","DSL","DSL.html#method-i-background","(value)","<p>The window background color.\n<p>Defaults to <code>&quot;rgba(0, 0, 0, 0.5)&quot;</code>.\n"],["camelize","String","String.html#method-i-camelize","()",""],["color","DSL","DSL.html#method-i-color","(value)","<p>The default text color.\n<p>Defaults to <code>&quot;white&quot;</code>.\n"],["css","DSL","DSL.html#method-i-css","(css)","<p>Add a Example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">css</span> <span class=\"ruby-identifier\">&lt;&lt;-END</span>\n<span class=\"ruby-value\">   window.background {\n     color: blue;\n     background-color: red;\n   }\n</span><span class=\"ruby-identifier\">END</span>\n</pre>\n"],["new","App","App.html#method-c-new","(options)",""],["new","Bar","Bar.html#method-c-new","(app)",""],["new","DSL","DSL.html#method-c-new","(path)",""],["new","Widgets::Button","Widgets/Button.html#method-c-new","(options)",""],["new","Widgets::Custom","Widgets/Custom.html#method-c-new","(options)",""],["new","Widgets::Uptime","Widgets/Uptime.html#method-c-new","(options)",""],["new","Widgets::Widget","Widgets/Widget.html#method-c-new","(options={})",""],["update","Widgets::Button","Widgets/Button.html#method-i-update","()",""],["update","Widgets::Custom","Widgets/Custom.html#method-i-update","()",""],["update","Widgets::Uptime","Widgets/Uptime.html#method-i-update","()",""],["update","Widgets::Widget","Widgets/Widget.html#method-i-update","()","<p>Update method for this widget\n"],["widget","DSL","DSL.html#method-i-widget","(name, options={})",""],["Gemfile","","Gemfile.html","","<p># frozen_string_literal: true\n<p>source “rubygems.org”\n<p>gem “gtk4”, “~&gt; 4.2” …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  atk (4.2.9)\n    glib2 (= 4.2.9)\n  cairo (1.18.4)\n    native-package-installer ...</pre>\n"],["README","","README_md.html","","<p>RubyBar\n<p>A bar for wayland implemented with Ruby and GTK.\nConfiguration is done via a Ruby DSL.\n<p>Development …\n"],["Rakefile","","Rakefile.html","","<p>task default: %w\n<p>task doc: :rdoc desc “Generate RDoc documentation” task :rdoc do\n\n<pre>system(&quot;rdoc ...</pre>\n"],["style.css","","src/style_css.html","","<p>window.background {\n\n<pre>background-color: #{options[:background]};\ncolor: #{options[:color]};</pre>\n<p>}\n"]]}}